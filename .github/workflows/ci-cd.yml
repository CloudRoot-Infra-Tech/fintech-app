name: CI-CD Pipeline

on:
  push:
    branches: 
    - main
  pull_request:
    branches:
    - main

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: 999568710647
  ECR_REGISTRY: 999568710647.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPO: fintech-app
  IMAGE_TAG: "1.0.0"

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Configure AWS Credentials for ECR
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/prod-GitHubActionsECR
          role-session-name: GitHubActionsSession
          audience: sts.amazonaws.com

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and Push Docker image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG

  deploy:
    name: Deploy Application to EKS
    needs: build
    runs-on: ubuntu-latest
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
    steps:
      - name: Configure kubectl
        uses: aws-actions/eks-setup-kubectl@v1
        with:
          cluster-name: ${TF_ENV:-prod}-eks-cluster
          region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          echo "TF_ENV: $TF_ENV"
          CLUSTER_NAME=${TF_ENV:-prod}-eks-cluster
          echo "Using cluster name: $CLUSTER_NAME"
          aws eks update-kubeconfig --region $AWS_REGION --name "$CLUSTER_NAME"

      - name: Execute Scripts
        run: |
          chmod +x eks-addons/script/helm_install.sh eks-addons/script/helm_charts.sh         
          ./eks-addons/script/helm_install.sh        
          ./eks-addons/script/helm_charts.sh

      - name: Deploying monitoring and logging solution
        run: | 
          kubectl apply -k monitoring    
          kubectl apply -k elk      

      - name: Apply Kubernetes Resources
        run: |
          kubectl apply -k k8s
